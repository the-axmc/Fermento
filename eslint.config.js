// @ts-nocheck
import js from "@eslint/js";
import globals from "globals";
import reactDOM from "eslint-plugin-react-dom";
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";
import reactX from "eslint-plugin-react-x";
import tseslint from "typescript-eslint";
import prettier from "eslint-config-prettier";

/**
 * ESLint v9 flat config
 * - Ignores generated/third-party dirs
 * - Type-aware rules for TS/TSX with correct tsconfig root
 * - React plugins + Prettier compat
 */
export default [
  // 1) Ignore folders that should never be linted
  {
    ignores: [
      "node_modules/**",
      "dist/**",
      "build/**",
      ".husky/**",
      "contracts/**/test_snapshots/**",
      "target/**",            // generated by scaffold
      "packages/**/dist/**"
      // NOTE: If you previously ignored src/contracts/** but wanted to include util.ts,
      // flat-config can't "negate ignore". Prefer *not* ignoring src/contracts/** here.
      // If some files there are noisy, add a specific ignore for them, not the whole tree.
    ],
  },

  // 2) JS recommended
  js.configs.recommended,

  // 3) TS recommended (type-checked)
  ...tseslint.configs.recommendedTypeChecked,

  // 4) React / hooks / fast-refresh / react-x + Prettier
  reactDOM.configs.recommended,
  reactHooks.configs["recommended-latest"],
  reactRefresh.configs.vite,
  reactX.configs["recommended-typescript"],
  prettier,

  // 5) Project-specific TS settings + rules
  {
    files: ["**/*.{ts,tsx}"],
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: "module",
      globals: globals.browser,
      parserOptions: {
        project: ["./tsconfig.node.json", "./tsconfig.app.json"],
        tsconfigRootDir: import.meta.dirname, // âœ… correct key
      },
    },
    rules: {
      // keep strict TS rules you hit earlier
      "@typescript-eslint/no-unsafe-assignment": "error",
      "@typescript-eslint/no-unsafe-member-access": "error",

      // your existing refresh rule
      "react-refresh/only-export-components": ["warn", { allowConstantExport: true }],
    },
  },

  // 6) (Optional) If you specifically want to ensure this file is linted even if you add broader ignores later:
  // {
  //   files: ["src/contracts/util.ts"],
  // },
];
